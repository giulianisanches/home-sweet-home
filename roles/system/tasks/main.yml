---
- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Remove uneeded packages
  community.general.snap:
    name: "{{ snaps_to_remove }}"
    state: absent

# During the installation I set the default to en_US, but i need some
# pt_BR locales (data, time and so on)
- name: Configure locale
  ansible.builtin.shell: |
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
    sed -i -e 's/# pt_BR.UTF-8 UTF-8/pt_BR.UTF-8 UTF-8/' /etc/locale.gen

    cat <<EOF > /etc/default/locale
    LANG=en_US.UTF-8
    LANGUAGE=en_US:en
    EOF

    dpkg-reconfigure --frontend=noninteractive locales
    update-locale LANG=en_US.UTF-8

- name: Download and Install minikube
  block:
    - name: Download minikube
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
        dest: /tmp/minikube.deb

    - name: Install minikube
      ansible.builtin.apt:
        deb: /tmp/minikube.deb
  when: "'minikube' not in ansible_facts.packages"

- name: Download and Install VSCode
  block:
    - name: Download VSCode packages
      ansible.builtin.get_url:
        url: https://go.microsoft.com/fwlink/?LinkID=760868
        dest: /tmp/vscode.deb
        force: true

    - name: Install VSCode
      ansible.builtin.apt:
        deb: /tmp/vscode.deb
  ignore_errors: true
  when: "'code' not in ansible_facts.packages"

- name: Check if vivaldi repository key is already downloaded
  stat:
    path: "{{trusted_gpg_path}}/vivaldi_browser.asc "
  register: vivaldi_key

- name: Check if docker key is already downloaded
  stat:
    path: "{{trusted_gpg_path}}/docker.asc"
  register: docker_key

- name: Check if weechat key is already downloadedd
  stat:
    path: "{{trusted_gpg_path}}/weechat.gpg"
  register: weechat_key

- name: Add Vivaldi repository gpg apt key
  ansible.builtin.get_url:
    url: https://repo.vivaldi.com/archive/linux_signing_key.pub
    dest: "{{trusted_gpg_path}}/vivaldi_browser.asc"
    mode: "0644"
    force: true
  when: not vivaldi_key.stat.exists

- name: Add Docker gpg apt key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: "{{trusted_gpg_path}}/docker.asc"
    mode: "0644"
    force: true
  when: not docker_key.stat.exists

- name: Add Weechat gpg apt key
  ansible.builtin.get_url:
    url: https://weechat.org/dev/info/debian_repository_signing_key/
    dest: "{{trusted_gpg_path}}/weechat.gpg"
    mode: "0644"
    force: true
  when: not weechat_key.stat.exists

- name: Add Vivaldi repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/vivaldi_browser.asc] https://repo.vivaldi.com/archive/deb/ stable main
    filename: vivaldi

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable
    filename: docker

- name: Add Weechat repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/weechat.gpg] https://weechat.org/debian bookworm main
    filename: weechat

- name: Upgrade packages
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: true

- name: Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: latest

- name: Cleanup remaining packages
  ansible.builtin.apt:
    autoremove: true

- name: Set vim as default editor ($VISUAL / $EDITOR)
  ansible.builtin.shell: update-alternatives --set editor /usr/bin/vim.basic

- name: Check if kubectl is installed
  stat:
    path: /usr/local/bin/kubectl
  register: kubectl_path

- name: Download and install kubectl
  block:
    - name: Get kubectl latest stable version string
      shell: curl -L -s https://dl.k8s.io/release/stable.txt
      register: kubectl_version

    - name: Download and install kubectl
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_version.stdout }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: "0755"
  when: not kubectl_path.stat.exists

- name: Add user to the docker group
  ansible.builtin.user:
    append: true
    groups: docker
    name: "{{ user }}"

- name: Enable docker
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: true
  loop:
    - docker
    - containerd
